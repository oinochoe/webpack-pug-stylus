@charset "utf-8";
// stylus의 가장 큰 특징 pug와 마찬가지로 띄어쓰기로 끝낸다.
// 콜론도없고 세미콜론도 중괄호도 없다. 띄어쓰기뿐... pug 스럽다.
// 원래는 * 는 자제하는 것이 좋지만 현재 모듈을 만들기 위해서 간단 예제를 적용하기 위해 사용함.
// css-trick에서 russian 인형 예제를 사용했다.
*
    -webkit-tap-highlight-color transparent // ios 인 webkit 기반 탭 했을 때 하이라이트되는 컬러 지정 -> outline과 별개로 접근성에 영향주지 않아 사용해도 된다고함.
    box-sizing border-box
    outline-color transparent

body
    display flex
    align-items center
    jutify-content center
    min-height 100vh
    background #fafafa

// 여기서부터 css variables를 사용해보자
:root
    --speed 0.25
    --scale-step 0.05
    --base-width 100
    --base-height calc(var(--base-width) * 1.8333333)
    --pop-height 60
    --slide-distance 60
    --base-slide calc(var(--base-width) * 1)

    @media(min-width 768px)
        --base-width 300

.bears
    position relative
    width calc(var(--base-width) * 1px)
    height calc(var(--base-heigth) * 1px)
    margin 0

    &:after
        content ""
        position absolute
        top 100%
        left 50%
        width 200%
        height 4px
        background hsl(0%, 0%, 75%)
        transform translate3d(-50%, 0, 0)
// hsl로 색상을 주는 것도 해보는 편이 좋다 rgba로만 되어있지 않은 경우가 있다.
.bear
    --bear-color 'hsl(25, 80%, %s)' % (calc(var(--lightness) * 1%))
    --claw-color 'hsl(25, 80%, %s)' % (calc((var(--lightness) - 20) * 1%))
    --shirt-color 'hsl(%s, 50%, 50%)' % (var(--shirt-hue))
    position absolute
    width 100%
    height 100%

    /*
    * Purely for styling the SVG elements
    */
    .bear-body
        fill var(--bear-color)

    .bear-shirt
        fill var(--shirt-color)

    .bear-claw
        fill var(--claw-color)

    .bear-foot
        stroke var(--claw-color)

    &__half
        position absolute
        width 100%
        height 50%
        left 0
        overflow hidden

        // 반을 가린다 overflow hidden으로!!
        svg
            position absolute
            width 100%
            height 200%

        &--top
            top 0

            svg
                top 0
        &--bottom
            bottom 0

            svg
                bottom 0

    &__container
    &__dummy-container
        position absolute
        width 100%
        height 100%
        top 0
        left 0

    &__container
        transform scale(calc(1 - ((var(--bear-index)) * var(--scale-step))))
        transform-origin bottom

    &__dummy
        --bear-color 'hsl(25, 80%, %s)' % (calc(var(--lightness) * 1%))
        --claw-color 'hsl(25, 80%, %s)' % (calc((var(--lightness) - 20) * 1%))
        --shirt-color 'hsl(%s, 50%, 50%)' % (var(--shirt-hue))
        position absolute
        width 100%
        height 100%
        top 0
        left 0
        transform scale(calc(1 - ((var(--bear-index) + 1) * var(--scale-step))))
        transform-origin bottom center


[type='checkbox']
[type='reset']
    display none

label
    cursor pointer
    display none

[for='reset']
    position fixed
    top 1rem
    right 1rem
    display block
    width 44px
    height 44px
    transition transform calc(var(--speed) * 1s) ease

    &:hover
        transform translate(0, -5%) scale(1.1)

        svg path
        fill #111

    svg
        width 44px
        height 44px

    path
        fill #aaaaaa
        transition fill calc(var(--speed) * 1s) ease

/**
 * 체크박스를 체크했을 때 할 일들
 * 1. 에니메이션이 끝날 때 까지 클릭 막기
 * 2. 부모 곰을 움직입니다
 * 3. 애기 곰이 나타납니다
 * 4. 애기 곰을 움직입니다
 * 5. 애기 곰의 완전체를 보여줍니다
 * 6. 인풋을 새로 나타냅니다
 * 7. 나머지 더미들을 삭제합니다
 * 8. 부모 허물을 삭제합니다
*/

input:checked + .bear + input + .bear
input:checked + .bear + .bear
    display block
    animation appear 0s calc(var(--speed) * 5s) both

input:checked + .bear
input:checked + .bear + input:checked + .bear
    pointer-events none
    animation slideLeft calc(var(--speed) * 1s) forwards, slideOut calc(var(--speed) * 1s) calc(var(--speed) * 6s) forwards

    .bear__half--top
        animation open calc(var(--speed) * 2s) calc(var(--speed) * 1s) forwards

    .bear__dummy-container
        animation move calc(var(--speed) * 2s) calc(var(--speed) * 3s) forwards, appear 0s calc(var(--speed) * 5s) reverse forwards

@keyframes slideLeft
    to
        transform translate(calc((var(--base-slide) * -1px) + var(--slide-distance) * -1%), 0)

@keyframes open
    0%
        transform translate(0, 0)
    {100 / 3%}
        transform translate(0, -100%)
    {100 / 3 * 2%}
        transform translate(-100%, -100%)
    100%
        transform translate(-100%, 100%)

@keyframes move
    0%
        transform translate(0, 0) translate(0,0)
    {100 / 3%}
        transform translate(0, calc(var(--pop-height) * -1%)) translate(0, 0)
    {100/ 3 * 2%}
        transform translate(0, calc(var(--pop-height) * -1%)) translate(calc((var(--base-slide) * 1px) + var(--slide-distance) * 1%), 0)
    100%
        transform translate(0, calc(var(--pop-height) * -1%)) translate(calc((var(--base-slide) * 1px) + var(--slide-distance) * 1%), calc(var(--pop-height) * 1%))

@keyframes slideOut
    from
        transform translate(calc((var(--base-slide) * -1px) + var(--slide-distance) * -1%), 0)
    to
        opacity 0
        transform translate(calc((var(--base-slide) * -1px) + var(--slide-distance) * -2%), 0)

@keyframes appear
    from
        transform scale(0)
